
name: Develop

on: 
  pull_request: 
    branches:
      - develop
    

jobs:
  GerandoImagemContainer:
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v3

    - name: Configurando Docker Buildx
      uses: docker/setup-buildx-action@v2

    - name: Listar arquivos no container
      run: ls -la
    - name: Mostrar o conteúdo do package.json formatado
      run: cat package.json | jq .

    - name: Log in no Docker Hub
      uses: docker/login-action@v2
      with:
        username: ${{ secrets.DOCKER_USERNAME }}
        password: ${{ secrets.DOCKER_TOKEN }}

    - name: Construir a imagem Docker
      run: |

        docker build -t pedrohsalmeida/nimbus-backend:TesteUnitario .
        docker tag pedrohsalmeida/nimbus-backend:TesteUnitario pedrohsalmeida/nimbus-backend:latest

    
    - name: Push da imagem para o Docker Hub
      run: |
        docker push pedrohsalmeida/nimbus-backend:TesteUnitario

  TesteUnitario:
    runs-on: ubuntu-latest
    needs: GerandoImagemContainer
    
    container:
      image: pedrohsalmeida/nimbus-backend:TesteUnitario
      options: --entrypoint /bin/sh # Usa '/bin/sh' para garantir que os comandos 'run' funcionem
      env:
        PORT: ${{ secrets.PORT }}
        JWT_SECRET: ${{ secrets.JWT_SECRET }}
        DB_URL_MONGO_BACK: ${{ secrets.DB_URL_MONGO_BACK }}
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v3
    
      - name: Instalando dempendencias
        run: npm install
    
      - name: rodando testes
        id: test
        run: npm run test:unit



  AceitaRecusaPR:
    runs-on: ubuntu-latest
    needs: TesteUnitario

    steps:
      - name: Checkout code
        uses: actions/checkout@v3
        
      - name: Aprovando pull_request se os testes passarem
        id: aprovado
        uses: juliangruber/approve-pull-request-action@v2 
        with:
            github-token: ${{ secrets.ADM_TOKEN }}
            number: ${{ github.event.pull_request.number }}
  
      - name: Merge Pull Request
        if: steps.aprovado.outcome == 'success'
        uses: juliangruber/merge-pull-request-action@v1
        with:
          github-token: ${{ secrets.ADM_TOKEN }}
          number: ${{ github.event.pull_request.number }}
          method: squash
  
      - run: echo "HEAD:${{github.event.pull_request.head.repo.name}}, BASE:${{github.event.pull_request.base.repo.name}}"

  PushDokerHub:
    runs-on: ubuntu-latest

    needs: AceitaRecusaPR

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Configurar Docker para autenticação
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_TOKEN }}

      - name: Construir a imagem Docker
        run: |
          # Usando o número do pull request como parte da tag
          docker build -t pedrohsalmeida/nimbus-backend:Dev-0.${{ github.event.number }} .
          docker tag pedrohsalmeida/nimbus-backend:Dev-0.${{ github.event.number }} pedrohsalmeida/nimbus-backend:latest

      - name: Push da imagem para o Docker Hub
        run: |
          docker push pedrohsalmeida/nimbus-backend:Dev-0.${{ github.event.number }}
          docker push pedrohsalmeida/nimbus-backend:latest

  DeletandoBuildTemporaria:
    runs-on: ubuntu-latest
    needs: [GerandoImagemContainer, TesteUnitario]
    if: always()

    steps:
      - name: Remove Docker image from Docker Hub
        run: |
          # Substitua 'owner' pelo seu nome de usuário ou organização no Docker Hub
          curl -s -X DELETE -u ${{ secrets.DOCKER_USERNAME }}:${{ secrets.DOCKER_TOKEN }} \
          "https://hub.docker.com/v2/repositories/pedrohsalmeida/nimbus-backend/tags/pedrohsalmeida/nimbus-backend:TesteUnitario/"

      

